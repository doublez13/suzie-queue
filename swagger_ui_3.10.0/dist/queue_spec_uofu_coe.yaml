swagger: "2.0"
info:
  title: "Queue API for University of Utah College of Engineering"
  version: "1.0.0"
  description: "**The following endpoints/functionalities can be used in designing a TA queue for the UofU CoE.**\n\n NOTES:\n- To test endpoints using *Try it out*, you must first login using `login.php`. Please remember to logout with `logout.php` when finished. **Logging out does not remove you from queues or take TAs off duty.**\n- You must be logged in as a TA to successfully use endpoints marked with *(TA)* or as an admin to use endpoints under *Admin*; otherwise endpoints are open to all users. Naturally, TAs and students can only operate on courses they are assigned to or enrolled in, respectively.\n- Currently it is possible to receive somewhat misleading, `success` responses when in reality nothing happened (i.e. no state changed in database). This can occur in requests that are bad (e.g. a TA dequeuing a non-existent user) or incorrect (e.g. a user dequeuing themselves from a course they are not enrolled in). In short, the server will not always report your errors so be sure your parameters are correct and make logical sense.\n- This system relies on CADE Active Directory LDAP for:\n-- user authentication\n-- user info (e.g. first/last name)\n-- access control (via TA/admin group membership); **admins must be members of \"queue-admin-GROUP\"**\n*If any of these do not work as expected, contact a CADE Lab administrator.*"
  # termsOfService: "http://swagger.io/terms/"
  contact:
    email: "zz@eng.utah.edu"
  license:
    name: "GPL 3"
    url: "https://www.gnu.org/licenses/gpl-3.0.en.html"

host: "suzie.eng.utah.edu"
basePath: "/blakeb/api"
schemes:
- "https"

# THESE TWO DECLARATIONS AT THE GLOBAL LEVEL ARE SUPPOSED
# ELIMINATE THE NEED FOR THEM IN ALL THE POST PATHS. BUT
# DUE TO A BUG, SOMETIMES IT DOESN'T WORK.
# consumes:
#   - "application/x-www-form-urlencoded"
# produces:
#   - "application/json"

tags:
  - name: "Login/Logout"
  - name: "Courses"
    description: "Course functionalities"
  - name: "User"
    description: "User functionalities"
  - name: "Queue"
    description: "Queue functionalities"
  - name: "Stats"
    description: "Statistical functionalities"
  - name: "Admin"
    description: "Administrator functionalities"


paths:
  /login.php:
    post:
      summary: "Login a user"
      description: "Login a user with the specified CADE username and password and get their info."
      tags:
        - "Login/Logout"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "username"
        in: "formData"
        description: "CADE username"
        type: "string"
        required: true
      - name: "password"
        in: "formData"
        description: "CADE password"
        type: "string"
        format: "password"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              username:
                type: "string"
                # example: "c00lperson"
              first_name:
                type: "string"
                # example: "Morgan"
              last_name:
                type: "string"
                # example: "Thompson"
              authenticated:
                type: "boolean"
                # example: true
        401:
          description: "Invalid username and/or password"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing username and/or password"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /logout.php:
    get:
      summary: "Logout a user"
      description: "Logout the user who sent the request. Naturally, the value of `authenticated` will always be false."
      tags:
        - "Login/Logout"
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              authenticated:
                type: "boolean"
                example: false
              success:
                type: "string"
                example: "User logged out"
  /classes/all_courses.php:
    get:
      summary: "Get all courses"
      description: "Get all the courses that can be enrolled in (i.e. courses with queues). `all_courses` is a hashmap: the *keys* are course names (e.g. \"CS 4150: Algorithms\", represented below as `additionalProp#`) and the *values* are objects: an `acc_req` key with a boolean value indicating whether or not the course requires an access code to enroll."
      tags:
        - "Courses"
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              authenticated:
                type: "boolean"
              all_courses:
                type: "object"
                description: "hashmap: course name -> {access code required -> bool}"
                additionalProperties:
                  type: "object"
                  properties:
                    acc_req:
                      type: "boolean"
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /user/get_info.php:
    get:
      summary: "Get user info"
      description: "Get the user's info."
      tags:
        - "User"
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              authenticated:
                type: "boolean"
              student_info:
                type: "object"
                properties:
                  username:
                    type: "string"
                  first_name:
                    type: "string"
                  last_name:
                    type: "string"
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /user/add_course.php:
    post:
      summary: "Enroll user in a course"
      description: "Enroll the user in the specified course with the specified access code (if required)."
      tags:
        - "User"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      - name: "acc_code"
        in: "formData"
        description: "access code if required by course"
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /user/rem_course.php:
    post:
      summary: "Unenroll user from a course"
      description: "Unenroll the user from the specified course."
      tags:
        - "User"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /user/my_courses.php:
    get:
      summary: "Get user enrolled courses"
      description: "Get all the courses the user has enrolled in or TAs."
      tags:
        - "User"
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              authenticated:
                type: "boolean"
              student_courses:
                type: "array"
                items:
                  type: "string"
              ta_courses:
                type: "array"
                items:
                  type: "string"
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/get_queue.php:
    post:
      summary: "Get a queue"
      description: "Get the queue state for the specified course including info regarding the TAs on duty, course announcements, and the TA time limit per student."
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              authenticated:
                type: "boolean"
              state:
                type: "string"
                description: "open, closed, or frozen"
              time_lim:
                type: "string"
                description: "TA time limit per student"
              queue_length:
                type: "integer"
              announce:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "string"
                    announcement:
                      type: "string"
                    tmstmp:
                      type: "string"
              TAs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    username:
                      type: "string"
                    duration:
                      description: "time spent on duty"
                      type: "string"
                    full_name:
                      type: "string"
                    helping:
                      description: "username of student being helped; null if none"
                      type: "string"
              queue:
                type: "array"
                items:
                  type: "object"
                  properties:
                    username:
                      type: "string"
                    full_name:
                      type: "string"
                    question:
                      type: "string"
                    location:
                      type: "string"
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not enrolled/assigned to course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/enqueue_student.php:
    post:
      summary: "Enqueue user"
      description: "Enqueue the user for the specified course with the specified question and location.\n**Requirements:**\n- user must be enrolled in the course\n- course queue must be open\n- TAs cannot enter their own queues"
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      - name: "question"
        in: "formData"
        description: "question/subject for TA"
        type: "string"
        required: true
      - name: "location"
        in: "formData"
        description: "location of student"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course, question, or location"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/dequeue_student.php:
    post:
      summary: "Dequeue a user"
      description: "Dequeue the user from the specified course. If the user is a TA, dequeue the specified student from the specified course. **TAs can only dequeue their own students.**"
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      - name: "student"
        in: "formData"
        description: "username to dequeue"
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course (and/or username if TA)"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/move_down.php:
    post:
      summary: "Move a user down in the queue"
      description: "Move the user down one spot in the specified course. If the user is a TA, move the specified student down one spot in the specified course. **TAs can only move their own students.**"
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      - name: "student"
        in: "formData"
        description: "username to move down"
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course (and/or username if TA)"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/open.php:
    post:
      summary: "Open a queue (TA)"
      description: "Open the queue for the specified course to allow students to enter."
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/freeze.php:
    post:
      summary: "Freeze a queue (TA)"
      description: "Freeze the queue for the specified course so no new students can enter. Open the queue to unfreeze."
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/close.php:
    post:
      summary: "Close a queue (TA)"
      description: "Close the queue for the specified course. This removes all students from the queue and prevents new entries until the queue is opened."
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/set_limit.php:
    post:
      summary: "Set a TA time limit per student (TA)"
      description: "Set with the specified positive integer the maximum amount of time (minutes) a TA can spend with a student in the specified course. No time limit is assumed if it is not set. **The queue must be open.**"
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      - name: "time_lim"
        in: "formData"
        description: "time limit (minutes)"
        type: "integer"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course or missing/incorrect time_lim"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/set_cooldown.php:
    post:
      summary: "Set a required wait time for re-entering the queue (TA)"
      description: "Set with the specified positive integer the time (minutes) a student must wait before they can re-enter the queue. No time limit is assumed if it is not set. **The queue must be open.**"
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      - name: "cooldown_time"
        in: "formData"
        description: "queue re-entry wait time (minutes)"
        type: "integer"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course or missing/incorrect cooldown_time"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/go_on_duty.php:
    post:
      summary: "Put TA on duty (TA)"
      description: "Put the TA on duty for the specified course.**The queue must be open.**"
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/go_off_duty.php:
    post:
      summary: "Take TA off duty (TA)"
      description: "Take the TA off duty for the specified course."
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/move_up.php:
    post:
      summary: "Move a user up in the queue (TA)"
      description: "Move the specified user up one spot in the specified course."
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      - name: "student"
        in: "formData"
        description: "user to move up"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course and/or student"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/help_student.php:
    post:
      summary: "Help a user (TA)"
      description: "Set the TA's status to helping the specified user in the specified course. A TA can only help one user at a time; a new user will override the current one. **The TA must be on duty in the specified course.**"
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      - name: "student"
        in: "formData"
        description: "username to help"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course and/or student"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/release_ta.php:
    post:
      summary: "Free TA from helping (TA)"
      description: "Set the TA's status to free (i.e. not helping anyone) in the specified course."
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/add_announcement.php:
    post:
      summary: "Post an announcement (TA)"
      description: "Post the specified announcement for the specified course."
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      - name: "announcement"
        in: "formData"
        description: "announcement"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course and/or announcement"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /queue/del_announcement.php:
    post:
      summary: "Delete an announcement (TA)"
      description: "Delete the announcement for the specified course with the specified ID."
      tags:
        - "Queue"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      - name: "announcement_id"
        in: "formData"
        description: "ID of announcement to delete"
        type: "integer"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course and/or announcement_id"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /stats/course_stats.php:
    post:
      summary: "Get statistics for a course"
      description: "Get statistics for the specified course including average wait/help times (seconds) and a total students helped daily log."
      tags:
        - "Stats"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              authenticated:
                description: "true if logged in"
                type: "boolean"
              stats:
                description: "course queue statistics"
                type: "object"
                properties:
                  avg_wait_time:
                    description: "average wait time before being helped (seconds)"
                    type: "string"
                  stddev_wait_time:
                    description: "standard deviation of average wait time (seconds)"
                    type: "string"
                  avg_help_time:
                    description: "average time being helped by the TA (seconds)"
                    type: "string"
                  stddev_help_time:
                    description: "standard deviation of average help time (seconds)"
                    type: "string"
              usage:
                description: "daily total students helped counts (excluding zero counts)"
                type: "array"
                items:
                  type: "object"
                  properties:
                    date:
                      type: "string"
                    students_helped:
                      type: "integer"
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        # 403:
        #   description: "Not TA for course"
        #   schema:
        #     $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /stats/student_log.php:
    post:
      summary: "Get user queue log"
      description: "Get info regarding every instance the user entered any queue, or if `course` is specifed, only that particular queue. If a course is specified for which the user is a TA, get info regarding each instance the specifed student entered that queue. Each instance includes info such as the question that was asked, when the student entered the queue, and when/if the student was helped."
      tags:
        - "Stats"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name (if desired)"
        type: "string"
      - name: "student"
        in: "formData"
        description: "username of student TA is getting info for"
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              authenticated:
                description: "true if logged in"
                type: "boolean"
              student_log:
                description: "student entry instances"
                type: "array"
                items:
                  type: "object"
                  properties:
                    course_name:
                      description: "ONLY PRESENT WHEN NO COURSE IS SPECIFIED"
                      type: "string"
                      example: "ONLY PRESENT WHEN NO COURSE IS SPECIFIED"
                    question:
                      description: "question asked by student"
                      type: "string"
                    location:
                      description: "location of student"
                      type: "string"
                    enter_tmstmp:
                      description: "time of queue entry"
                      type: "string"
                    help_tmstmp:
                      description: "time when helped"
                      type: "string"
                    exit_tmstmp:
                      description: "time of queue exit"
                      type: "string"
                    helped_by:
                      description: "TA who helped student"
                      type: "string"
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing student (if user is TA and course is specified)"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /stats/ta_log.php:
    post:
      summary: "Get TA's helped students log (TA)"
      description: "Get info regarding each instance a student was helped by the TA in the specified course. Each instance includes info such as the question that was asked, when the student entered the queue, and when the student was helped."
      tags:
        - "Stats"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              authenticated:
                description: "true if logged in"
                type: "boolean"
              ta_log:
                description: "student helped instances"
                type: "array"
                items:
                  type: "object"
                  properties:
                    question:
                      description: "question asked by student"
                      type: "string"
                    location:
                      description: "location of student"
                      type: "string"
                    enter_tmstmp:
                      description: "time of queue entry"
                      type: "string"
                    help_tmstmp:
                      description: "time when helped"
                      type: "string"
                    exit_tmstmp:
                      description: "time of queue exit"
                      type: "string"
                    helped_by:
                      description: "TA who helped student"
                      type: "string"
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /stats/course_log.php:
    post:
      summary: "Get a course queue log (TA)"
      description: "Get info regarding each instance a student entered the queue in the specified course. Each instance includes info such as the question that was asked, when the student entered the queue, and when/if the student was helped."
      tags:
        - "Stats"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "course name"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              authenticated:
                description: "true if logged in"
                type: "boolean"
              course_log:
                description: "student entry instances"
                type: "array"
                items:
                  type: "object"
                  properties:
                    username:
                      description: "username of student"
                      type: "string"
                    question:
                      description: "question asked by student"
                      type: "string"
                    location:
                      description: "location of student"
                      type: "string"
                    enter_tmstmp:
                      description: "time of queue entry"
                      type: "string"
                    help_tmstmp:
                      description: "time when helped"
                      type: "string"
                    exit_tmstmp:
                      description: "time of queue exit"
                      type: "string"
                    helped_by:
                      description: "TA who helped student"
                      type: "string"
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not TA for course"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /admin/create_course.php:
    post:
      summary: "Create a new course"
      description: "Create a new course with the specified info.\n**Requirements:**\n- *professor* must be an actual username\n- *ldap_group* must correspond to the real LDAP group name for the course TAs or else they won't have TA privileges"
      tags:
        - "Admin"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course_name"
        in: "formData"
        description: "full course name (e.g. \"CS 5555: Intro to the Number Five\")"
        type: "string"
        required: true
      - name: "depart_prefix"
        in: "formData"
        description: "department prefix (e.g. \"CS\" or \"ME\")"
        type: "string"
        required: true
      - name: "course_num"
        in: "formData"
        description: "course number (e.g. \"5555\")"
        type: "string"
        required: true
      - name: "professor"
        in: "formData"
        description: "username of professor"
        type: "string"
        required: true
      - name: "description"
        in: "formData"
        description: "description of the course"
        type: "string"
        required: true
      - name: "ldap_group"
        in: "formData"
        description: "LDAP group name for course TAs"
        type: "string"
        required: true
      - name: "acc_code"
        in: "formData"
        description: "access code to enroll (optional; 16 character max)"
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not admin"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing parameter"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'
  /admin/delete_course.php:
    post:
      summary: "Delete a course"
      description: "Delete the specifed course."
      tags:
        - "Admin"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
      - name: "course"
        in: "formData"
        description: "full course name to delete (e.g. \"CS 5555: Intro to the Number Five\")"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/success'
        401:
          description: "Not authenticated"
          schema:
            $ref: '#/definitions/not_authenticated'
        403:
          description: "Not admin"
          schema:
            $ref: '#/definitions/error'
        405:
          description: "Invalid HTTP request method"
          schema:
            $ref: '#/definitions/bad_method'
        422:
          description: "Missing course"
          schema:
            $ref: '#/definitions/error'
        500:
          description: "Server-side error"
          schema:
            $ref: '#/definitions/error'

definitions:
  success:
    description: "Many endpoints return this simple JSON structure upon a successful request."
    properties:
      authenticated:
        description: "true if logged in"
        type: "boolean"
      success:
        description: "the result of your request"
        type: "string"
  error:
    description: "Most endpoints return this JSON structure upon a failed request."
    properties:
    # CURRENTLY, I THINK authenticated IS ALWAYS TRUE WHEN THIS STRUCTURE IS RETURNED. CONSIDER STATING THIS HERE.
      authenticated:
        description: "true if logged in"
        type: "boolean"
      error:
        description: "what went wrong with your request"
        type: "string"
  not_authenticated:
    description: "This JSON structure indicates you have not logged in."
    properties:
      authenticated:
        description: "will always be 'false'"
        type: "boolean"
        example: "false"
  bad_method:
    description: "The HTTP request method is not allowed (e.g. using GET when POST is required)."
    properties:
    # IF WE ADD THIS, THERE IS NO NEED FOR THIS DEFINITION; JUST USE 'error'
      # authenticated:
      #   description: "true if user is logged in"
      #   type: "boolean"
      error:
        description: "what method(s) are allowed"
        type: "string"

# NOT SURE WHAT TO PUT FOR THESE

# Supported authentication methods are:
# -Basic authentication
# -API key (as a header or query parameter)
# -OAuth 2 common flows (implicit, password, application and access code)

# securityDefinitions:
#   BasicAuth:
#     type: basic

# THIS MIGHT GO IN EACH OPERATION
# security:
#   - BasicAuth: []